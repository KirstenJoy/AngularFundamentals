{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EventsListComponent, EventService, EventDetailsComponent, CreateEventComponent, EventRouteActivator, EventListResolver } from './events/index';\nimport { EventsAppComponent } from './events-app.component';\nimport { ToastrService } from './common/toastr.service';\nimport { appRoutes } from './routes';\nimport { Error404Component } from './errors/404.component';\nimport { AuthService } from './user/auth.service';\nimport { CollapsibleWellComponent } from './common/collapsible-well.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [EventsAppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [EventService, ToastrService, EventRouteActivator, EventListResolver, AuthService, {\n      provide: 'canDeactivateCreateEvent',\n      useValue: checkDirtyState\n    }],\n    imports: [BrowserModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot(appRoutes)]\n  });\n  return AppModule;\n})();\ni0.ɵɵsetComponentScope(CollapsibleWellComponent, function () {\n  return [i2.NgIf, i1.ɵEmptyOutletComponent, EventsListComponent, EventDetailsComponent, CreateEventComponent, Error404Component];\n}, []);\nexport function checkDirtyState(component) {\n  if (component.isDirty) return window.confirm('You have not saved this event, do you really want to cancel?');\n  return true;\n}","map":null,"metadata":{},"sourceType":"module"}